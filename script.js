// Initialize the map centered on Bulgaria
const map = L.map('map').setView([42.724, 25.483], 7);

// Add OpenStreetMap tiles
L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
    maxZoom: 18,
}).addTo(map);

const bulgariaGeoJSON = {
    "type": "Feature",
    "properties": {},
    "geometry": {
        "coordinates": [
            [
                [22.681296654633655, 44.19879958988446],
                [22.455316590592076, 44.01299713746289],
                [22.38384047362652, 43.8133266309232],
                [22.488481316373367, 43.62897969846952],
                [22.68583753771088, 43.42856191801425],
                [22.873414986148816, 43.217437765846995],
                [23.003878043424578, 43.11167825465765],
                [22.860022913463126, 42.95993818430867],
                [22.669250418819786, 42.87387591709211],
                [22.434523392353753, 42.82606002134358],
                [22.50338625681846, 42.69515900391178],
                [22.441249658374232, 42.571187786284696],
                [22.55490491553354, 42.42627302590719],
                [22.366827458913917, 42.30789901632693],
                [22.560201157950644, 42.130176151730154],
                [22.772511899689135, 42.054800098079085],
                [22.87356263710066, 42.02218356226564],
                [22.908880879272374, 41.85718325245702],
                [23.02655239645955, 41.732185907601774],
                [22.94871105665149, 41.61782940367743],
                [22.94757306139806, 41.46762467008929],
                [22.963646117469636, 41.33834124470849],
                [23.22473821690508, 41.322260006480434],
                [23.344678715833822, 41.333954604875004],
                [23.490524933029377, 41.38745706786949],
                [23.75372986789111, 41.40025715209626],
                [24.032776318983252, 41.476138199353755],
                [24.210247155791336, 41.55165565905986],
                [24.47591812631717, 41.52198798167288],
                [24.632935561968026, 41.416820570359306],
                [24.835475886050034, 41.341915019249626],
                [25.050308920005165, 41.333717480508],
                [25.275746670723493, 41.24724346854637],
                [25.60000357454905, 41.31767583350694],
                [25.859286192777063, 41.334419331376665],
                [26.131499898434924, 41.363654189713316],
                [26.170896332477298, 41.502728207088325],
                [26.08408671555887, 41.684877775690154],
                [26.323093325926322, 41.74258717496011],
                [26.581300655727517, 41.84551084041095],
                [26.6070997801709, 41.96402751054089],
                [26.959927525786128, 41.982335870086956],
                [27.10539792877836, 42.084889129752696],
                [27.288274136425883, 42.084889129752696],
                [27.47124922017133, 41.96825358947464],
                [27.650222455546583, 41.93156820093125],
                [27.88376190683269, 41.95532936195099],
                [28.054370738333603, 42.00641165669339],
                [27.66016320977937, 42.419475736029256],
                [27.436512266702266, 42.45914391561712],
                [27.616272643623745, 42.58545862327273],
                [27.919128309922087, 42.710364041533865],
                [27.889714023203425, 42.92796064902302],
                [27.94855504778414, 43.1528885131176],
                [28.09797477925966, 43.36948500575585],
                [28.381066798617354, 43.40893233905177],
                [28.56642577033307, 43.443183311187966],
                [28.603652078525272, 43.563829992582725],
                [28.570196783051585, 43.77587827769102],
                [28.033796763289672, 43.88982229562092],
                [27.88820697564148, 43.98172088680232],
                [27.563971290764584, 44.050158761735844],
                [27.25684051121712, 44.11913253976064],
                [26.94590368043427, 44.12537563249103],
                [26.606666166455085, 44.050297342161485],
                [26.21045863211313, 43.98806871498019],
                [25.827566585576875, 43.76946346378966],
                [25.477526796049858, 43.6509027258472],
                [25.20926798644345, 43.71580347679415],
                [24.859377580489706, 43.73972776162867],
                [24.649859768485783, 43.75778470285513],
                [24.325848688084506, 43.69825836877277],
                [23.94717074949051, 43.72794823331054],
                [23.500229461419337, 43.83596791395075],
                [23.15500740905685, 43.83583237964328],
                [22.872123405016055, 43.82952682958111],
                [22.850733053689368, 43.963393401094095],
                [23.01634643959568, 44.02523701523927],
                [23.00611215182886, 44.11251430545079],
                [22.681296654633655, 44.19879958988446]
            ]
        ],
        "type": "Polygon"
    }
}

L.geoJSON(bulgariaGeoJSON, {
    style: function () {
        return {
            color: "#00000000", // Transparent color for no outline
        };
    }
}).addTo(map);

function showRandomSpot() {
    let point;
    let isInside = false;
    const coordinates = bulgariaGeoJSON.geometry.coordinates[0];
    const n = coordinates.length;
    // Initialize min and max latitude and longitude
    let minLat = coordinates[0][1];
    let maxLat = coordinates[0][1];
    let minLng = coordinates[0][0];
    let maxLng = coordinates[0][0];

    // Calculate the bounding box of the polygon
    for (let i = 1; i < n; i++) {
        const lat = coordinates[i][1];
        const lng = coordinates[i][0];
        if (lat < minLat) minLat = lat;
        if (lat > maxLat) maxLat = lat;
        if (lng < minLng) minLng = lng;
        if (lng > maxLng) maxLng = lng;
    }

    // Keep generating random points until we find one within Bulgaria's borders
    while (!isInside) {
        const lat = minLat + Math.random() * (maxLat - minLat);
        const lng = minLng + Math.random() * (maxLng - minLng);

        point = turf.point([lng, lat]);
        isInside = turf.booleanPointInPolygon(point, bulgariaGeoJSON);
    }

    const randomLatLng = [point.geometry.coordinates[1], point.geometry.coordinates[0]];

    L.marker(randomLatLng).addTo(map)
        .bindPopup(`Random Spot: ${randomLatLng[0].toFixed(4)}, ${randomLatLng[1].toFixed(4)}`)
        .openPopup();

    map.setView(randomLatLng, map.getZoom());
}

// Event listener for the button
document.getElementById('randomSpotButton').addEventListener('click', showRandomSpot);
